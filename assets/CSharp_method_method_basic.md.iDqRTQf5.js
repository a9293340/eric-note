import{_ as a,c as l,o as i,ae as o}from"./chunks/framework.Cwl8K4e2.js";const b=JSON.parse('{"title":"方法的概念與創建","description":"","frontmatter":{},"headers":[],"relativePath":"CSharp/method/method_basic.md","filePath":"CSharp/method/method_basic.md"}'),d={name:"CSharp/method/method_basic.md"};function t(r,e,c,h,u,n){return i(),l("div",null,e[0]||(e[0]=[o('<h1 id="方法的概念與創建" tabindex="-1">方法的概念與創建 <a class="header-anchor" href="#方法的概念與創建" aria-label="Permalink to &quot;方法的概念與創建&quot;">​</a></h1><h2 id="方法的定義" tabindex="-1">方法的定義 <a class="header-anchor" href="#方法的定義" aria-label="Permalink to &quot;方法的定義&quot;">​</a></h2><ul><li>方法是執行特定操作或計算的語句集合。</li><li>方法是類的一部分，並不存儲在對象內部，但可以從對象調用。</li></ul><h2 id="方法的創建" tabindex="-1">方法的創建 <a class="header-anchor" href="#方法的創建" aria-label="Permalink to &quot;方法的創建&quot;">​</a></h2><ul><li>方法名稱後需加括號，括號內可包含一個或多個參數（可選）。</li><li>每個參數需定義類型和名稱，例如：<code>int x</code>。</li><li>方法體包含可執行的語句。</li></ul><h2 id="方法的返回值" tabindex="-1">方法的返回值 <a class="header-anchor" href="#方法的返回值" aria-label="Permalink to &quot;方法的返回值&quot;">​</a></h2><ul><li>方法可以返回結果值，使用 <code>return</code> 關鍵字。</li><li>如果不返回任何值，返回類型為 <code>void</code>。</li></ul><h2 id="訪問修飾符" tabindex="-1">訪問修飾符 <a class="header-anchor" href="#訪問修飾符" aria-label="Permalink to &quot;訪問修飾符&quot;">​</a></h2><ul><li>方法的訪問修飾符與字段相同： <ul><li><code>private</code>: 只能在同一類中訪問。</li><li><code>protected</code>: 在同一類及子類中訪問。</li><li><code>internal</code>: 在同一程序集內部訪問。</li><li><code>public</code>: 在任何地方訪問。</li></ul></li></ul><h2 id="方法的修飾符" tabindex="-1">方法的修飾符 <a class="header-anchor" href="#方法的修飾符" aria-label="Permalink to &quot;方法的修飾符&quot;">​</a></h2><ul><li>C# 方法支持的修飾符： <ul><li><code>static</code></li><li><code>virtual</code></li><li><code>abstract</code></li><li><code>override</code></li><li><code>new</code></li><li><code>partial</code></li><li><code>sealed</code></li></ul></li><li>方法的默認訪問修飾符為 <code>private</code>。</li></ul><h2 id="方法的參數" tabindex="-1">方法的參數 <a class="header-anchor" href="#方法的參數" aria-label="Permalink to &quot;方法的參數&quot;">​</a></h2><ul><li>參數可以是基本類型（如 <code>int</code>, <code>double</code>）或非基本類型（如類、結構）。</li><li>可以使用局部變量來存儲計算結果。</li></ul><h2 id="方法的調用" tabindex="-1">方法的調用 <a class="header-anchor" href="#方法的調用" aria-label="Permalink to &quot;方法的調用&quot;">​</a></h2><ul><li>方法必須從外部調用才能執行。</li><li>使用對象的引用來調用方法，並根據當前對象的字段執行操作。</li></ul><h2 id="實例-計算稅款的方法" tabindex="-1">實例：計算稅款的方法 <a class="header-anchor" href="#實例-計算稅款的方法" aria-label="Permalink to &quot;實例：計算稅款的方法&quot;">​</a></h2><ul><li>在 <code>Product</code> 類中創建 <code>CalculateTax</code> 方法，根據產品成本計算稅款。</li><li>根據成本的不同，稅率為 10% 或 12.5%。</li><li>方法不返回值，計算結果存儲在 <code>tax</code> 字段中。</li></ul><h2 id="總結" tabindex="-1">總結 <a class="header-anchor" href="#總結" aria-label="Permalink to &quot;總結&quot;">​</a></h2><ul><li>方法是執行計算或過程的關鍵工具。</li><li>在實際項目中，應根據需求創建和調用方法。</li></ul>',19)]))}const m=a(d,[["render",t]]);export{b as __pageData,m as default};
