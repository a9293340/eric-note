import{_ as i,c as a,o as e,ae as t}from"./chunks/framework.TiKqN8Et.js";const m=JSON.parse('{"title":"IAM(Identity and Access Management)","description":"","frontmatter":{},"headers":[],"relativePath":"AWS/iam.md","filePath":"AWS/iam.md"}'),o={name:"AWS/iam.md"};function r(n,l,u,c,s,d){return e(),a("div",null,l[0]||(l[0]=[t('<h1 id="iam-identity-and-access-management" tabindex="-1">IAM(Identity and Access Management) <a class="header-anchor" href="#iam-identity-and-access-management" aria-label="Permalink to &quot;IAM(Identity and Access Management)&quot;">​</a></h1><h2 id="iam-是什麼" tabindex="-1">IAM 是什麼 <a class="header-anchor" href="#iam-是什麼" aria-label="Permalink to &quot;IAM 是什麼&quot;">​</a></h2><ul><li>IAM 是 AWS 的身分和存取管理服務</li><li>為一個 Global 服務，可以在所有 AWS 區域使用</li><li>可以讓你建立和管理 AWS 的使用者、群組、角色和策略</li><li>可以讓你控制誰可以存取你的 AWS 資源</li></ul><h2 id="iam-的組成" tabindex="-1">IAM 的組成 <a class="header-anchor" href="#iam-的組成" aria-label="Permalink to &quot;IAM 的組成&quot;">​</a></h2><ul><li>使用者 (User) <ul><li>可以建立多個使用者，並且可以設定不同的存取權限</li><li>User 對於 Groups 是多對多關係，且不一定屬於任何 Group</li></ul></li><li>群組 (Group) <ul><li>Groups 只能包涵 Users，不能包涵其他 Groups</li></ul></li><li>策略 (Policy) <ul><li>為一個 json 檔案，定義了使用者或角色的存取權限</li><li>建議遵守最小權限原則 (Principle of Least Privilege)</li></ul></li><li>角色 (Role) <ul><li>為一個 json 檔案，定義了使用者或角色的存取權限</li><li>可以讓你建立一個角色，並且可以設定不同的存取權限</li></ul></li></ul><h3 id="policy-的組成" tabindex="-1">Policy 的組成 <a class="header-anchor" href="#policy-的組成" aria-label="Permalink to &quot;Policy 的組成&quot;">​</a></h3><ul><li>Version <ul><li>版本號</li></ul></li><li>Id <ul><li>策略的唯一識別碼</li></ul></li><li>Statement <ul><li>策略的內容</li><li>可以包含多個 Statement</li><li>每個 Statement 可以包含多個 Action、Resource、Effect</li></ul></li><li>Action <ul><li>要執行的動作或權限</li></ul></li><li>Resource <ul><li>將 Action 應用於哪些資源</li></ul></li><li>Effect <ul><li>Allow or Deny</li><li>決定是否允許或拒絕動作</li></ul></li><li>Sid <ul><li>Statement 的唯一識別碼</li></ul></li><li>Principal <ul><li>應用於哪些主體</li><li>可以是 User、Group、Role</li></ul></li><li>Condition <ul><li>要執行的動作或權限的條件</li></ul></li></ul><h2 id="iam-常見防護機制" tabindex="-1">IAM 常見防護機制 <a class="header-anchor" href="#iam-常見防護機制" aria-label="Permalink to &quot;IAM 常見防護機制&quot;">​</a></h2><h3 id="password-policy" tabindex="-1">Password Policy <a class="header-anchor" href="#password-policy" aria-label="Permalink to &quot;Password Policy&quot;">​</a></h3><ul><li>Password Policy 是一個設定，用於管理 IAM 使用者的密碼策略</li><li>可以設定密碼的長度、複雜度、過期時間等</li><li>可以要求用戶密碼不得重複、定期修改....</li></ul><h3 id="iam-mfa-multi-factor-authentication" tabindex="-1">IAM MFA(Multi-Factor Authentication) <a class="header-anchor" href="#iam-mfa-multi-factor-authentication" aria-label="Permalink to &quot;IAM MFA(Multi-Factor Authentication)&quot;">​</a></h3><h4 id="什麼是-mfa" tabindex="-1">什麼是 MFA <a class="header-anchor" href="#什麼是-mfa" aria-label="Permalink to &quot;什麼是 MFA&quot;">​</a></h4><ul><li>MFA 是一種身分驗證方式，需要使用者提供兩種不同的身分驗證方式才能登入</li><li>常見的 MFA 方式有 OTP、指紋、Face ID</li><li>Virtual MFA device 是一個軟體，可以生成 OTP，EX : Google Authenticator</li><li>U2F Security Key 是一個硬體，可以生成 OTP，EX : YubiKey</li><li>Hardware MFA device 是一個硬體，可以生成 OTP，EX : RSA SecurID</li></ul><h3 id="iam-role" tabindex="-1">IAM Role <a class="header-anchor" href="#iam-role" aria-label="Permalink to &quot;IAM Role&quot;">​</a></h3><ul><li>IAM Role 是 AWS 中的一種身份，允許你定義一組權限，並將這些權限授予 AWS 服務或其他 AWS 使用者。</li><li>與 IAM 使用者不同，IAM Role 並不與特定的使用者或實體綁定，而是可以被多個實體（如 EC2 實例、Lambda 函數等）使用。</li><li>這使得 IAM Role 特別適合於需要臨時訪問權限的情況，因為角色可以在需要時被授予，而不需要長期持有金鑰。</li></ul>',15)]))}const A=i(o,[["render",r]]);export{m as __pageData,A as default};
