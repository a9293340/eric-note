import{_ as o,c as n,o as t,ae as c}from"./chunks/framework.TiKqN8Et.js";const _=JSON.parse('{"title":"What is Type Conversion","description":"","frontmatter":{},"headers":[],"relativePath":"CSharp/type-conversion/index.md","filePath":"CSharp/type-conversion/index.md"}'),d={name:"CSharp/type-conversion/index.md"};function r(i,e,s,a,l,p){return t(),n("div",null,e[0]||(e[0]=[c('<h1 id="what-is-type-conversion" tabindex="-1">What is Type Conversion <a class="header-anchor" href="#what-is-type-conversion" aria-label="Permalink to &quot;What is Type Conversion&quot;">​</a></h1><p>類型轉換是將值從一種類型轉換為另一種類型的過程。例如，您可以將一個值從 <code>int</code> 轉換為 <code>double</code>；<code>double</code> 轉換為 <code>string</code>；<code>string</code> 轉換為 <code>bool</code> 等等。</p><h2 id="type-conversion-的種類" tabindex="-1">type conversion 的種類 <a class="header-anchor" href="#type-conversion-的種類" aria-label="Permalink to &quot;type conversion 的種類&quot;">​</a></h2><ol><li><strong>隱式轉換</strong>：用於將值從數值類型轉換為更高的數值類型。例如，<code>int</code> 到 <code>long</code>。</li><li><strong>顯式轉換</strong>：用於將值從較高的數值類型轉換為較低的數值類型。例如，您可以將一個值從 <code>long</code> 轉換為 <code>int</code>，或者從 <code>double</code> 轉換為 <code>short</code>。</li><li><strong>解析 (Parse)</strong>：將值從 <code>string</code> 類型轉換為數值類型的技術。例如，您可以將一個值從 <code>string</code> 轉換為 <code>int</code> 或 <code>double</code>。</li><li><strong>轉換方法</strong>：將值從任何基元類型轉換為任何其他基元類型。也可以是 <code>string</code> 轉換為基元類型或基元類型轉換為 <code>string</code>。</li></ol>',4)]))}const g=o(d,[["render",r]]);export{_ as __pageData,g as default};
